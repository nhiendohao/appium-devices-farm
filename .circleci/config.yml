# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.2.5
jobs:
  ui-chrome-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      # Checkout the code
      - checkout

      # Install web browsers
      - browser-tools/install-browser-tools

      # Install Unzip for Allure Installation
      - run:
          name: Install unzip
          command: sudo apt install unzip

      # Download and Install allure-2.23.0.
      - run:
          name: Allure archive download
          command: |
            curl -L https://github.com/allure-framework/allure2/releases/download/2.23.0/allure-2.23.0.zip -o /tmp/allure.zip
      - run:
          name: Unzip archive
          command: unzip /tmp/allure.zip
      - run:
          name: Install allure
          command: sudo mv allure-2.23.0 /usr/local/share/allure
      - run:
          name: Allure binary symlinking
          command: sudo ln -s /usr/local/share/allure/bin/allure /usr/local/bin/allure

      # Log Allure version
      - run:
          name: Check allure java-version
          command: allure --version

      # Restore cache to speed up build
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }} # appends cache key with a hash of pom.xml file
            - v1-dependencies- # fallback in case previous cache key is not found

      # Run maven test
      - run:
          name: Start E2E Chrome testing
          command: mvn clean verify -Dgroups="GoogleSearch"

      # Generate Allure report
      - run:
          name: Generate Allure report
          command: allure generate target/allure-results --clean --output allure-report
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # Store Allure report
      - store_artifacts:
          name: Uploading Allure report
          path: allure-report

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - ui-chrome-test:
          filters:
            branches:
              only:
                - main